networks:
    laravel:
        driver: bridge
volumes:
    database-laravel:
        driver: local
    redis-laravel:
        driver: local
    pgadmin-laravel:
        driver: local
    postgresql-laravel:
        driver: local

services:
    nginx:
        container_name: "nginx"
        build:
            context: ./docker-repo/nginx
            dockerfile: nginx.dockerfile
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
        ports:
            - "${FORWARD_NGINX_PORT:-80}:80"
        volumes:
            - .:/var/www/html:delegated
        depends_on:
            - php
            - redis
            - mysql
        networks:
            - laravel

    php:
        container_name: "php"
        build:
            context: ./docker-repo/php
            dockerfile: php.dockerfile
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
        ports:
            - "${FORWARD_PHP_PORT:-9000}:9000"
        volumes:
            - .:/var/www/html:delegated
            - ./docker-repo/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - laravel

#    postgresql:
#        image: postgres:15.4
#        container_name: postgresql
#        environment:
#            POSTGRES_USER: "${DB_USERNAME:-user_db}"
#            POSTGRES_PASSWORD: "${DB_PASSWORD:-pass_db}"
#            POSTGRES_DB: "${DB_DATABASE:-laravel_db}"
#            PGDATA: /data/postgres
#            TZ: Asia/Tehran
#        healthcheck:
#            test:
#                [
#                    "CMD-SHELL",
#                    "pg_isready -d ${DB_DATABASE:-laravel_db} -U ${DB_USERNAME:-user_db}",
#                ]
#            interval: 5s
#            timeout: 5s
#            retries: 5
#        volumes:
#            - postgresql-laravel:/data/postgres
#            - ./docker-repo/database/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
#        ports:
#            - "${FORWARD_MYSQL_PORT:-5432}:5432"
#        restart: unless-stopped
#        networks:
#            - laravel
#
#    pgadmin:
#        image: dpage/pgadmin4
#        container_name: pgadmin
#        environment:
#            PGADMIN_DEFAULT_EMAIL: "${PG_EMAIL:-admin@pgadmin.org}"
#            PGADMIN_DEFAULT_PASSWORD: "${PG_PASSWORD:-123456}"
#            PGADMIN_CONFIG_SERVER_MODE: "False"
#        volumes:
#            - pgadmin-laravel:/var/lib/pgadmin
#        ports:
#            - "${FORWARD_MYSQL_PORT:-8081}:80"
#        depends_on:
#            postgresql:
#                condition: service_healthy
#        restart: unless-stopped
#        networks:
#            - laravel
    mysql:
        container_name: "mysql"
        image: mariadb:10.6
        restart: unless-stopped
        tty: true
        ports:
            - "${FORWARD_MYSQL_PORT:-3306}:3306"
        volumes:
            - database-laravel:/var/lib/mysql:delegated
            - ./docker-repo/database/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
        environment:
            MYSQL_DATABASE: "${DB_DATABASE:-default_db}"
            MYSQL_USER: "${DB_USERNAME:-default_user}"
            MYSQL_PASSWORD: "${DB_PASSWORD:-default_password}"
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-default_password}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            TZ: "${TZ:-Asia/Tehran}"
        healthcheck:
            test:
              [
                  "CMD",
                  "mysqladmin",
                  "ping",
                  "-p${DB_PASSWORD:-default_password}",
              ]
            retries: 3
            timeout: 5s
        networks:
            - laravel

    phpmyadmin:
        container_name: "phpmyadmin"
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - "${FORWARD_PHPMYADMIN_PORT:-8081}:80"
        environment:
            PMA_HOST: mysql
            PMA_PASSWORD: "${DB_PASSWORD:-default_password}"
            UPLOAD_LIMIT: 64M
        depends_on:
            - mysql
        networks:
            - laravel

    redis:
        container_name: "redis"
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
        volumes:
            - "redis-laravel:/data"
        networks:
            - laravel
